name: $(date:yyyyMMdd)$(rev:.r)

trigger: none

pr:
- main

resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/main

jobs:
- job: Build
  displayName: Build
  timeoutInMinutes: 240

  strategy:
    matrix:
      ReleaseWinUICs:
        BuildConfiguration: ReleaseWinUICs
        BuildPlatform: Any CPU
      ReleaseWinUICpp:
        BuildConfiguration: ReleaseWinUICpp
        BuildPlatform: Any CPU
      ReleaseWPF:
        BuildConfiguration: ReleaseWPF
        BuildPlatform: Any CPU
      ReleaseUWP:
        BuildConfiguration: ReleaseUWP
        BuildPlatform: Any CPU

  pool:
    vmImage: windows-2022

  steps:
  - checkout: self
    clean: true
    submodules: recursive

  - task: NuGetToolInstaller@1
    displayName: 'Use NuGet'
    inputs:
      checkLatest: true

  - task: NuGetCommand@2
    displayName: 'NuGet restore'
    inputs:
      solution: code/TemplateStudio.sln

  - task: VSBuild@1
    displayName: 'Build'
    inputs:
      solution: code/TemplateStudio.sln
      vsVersion: 17.0
      msbuildArgs: /p:DeployExtension=false
      platform: $(BuildPlatform)
      configuration: $(BuildConfiguration)
      clean: true

- job:
  displayName: Test - Template Studio for WinUI (C#)
  timeoutInMinutes: 240
  dependsOn: Build

  pool:
    vmImage: windows-2022

  steps:
  - checkout: self
    clean: true
    submodules: recursive

  - task: NuGetToolInstaller@1
    displayName: 'Use NuGet'
    inputs:
      checkLatest: true

  - task: NuGetCommand@2
    displayName: NuGet restore
    inputs:
      solution: code/TemplateStudio.WinUICs.slnf

  - task: VSBuild@1
    displayName: Build
    inputs:
      solution: code/TemplateStudio.WinUICs.slnf
      vsVersion: 17.0
      configuration: DebugWinUICs
      platform: Any CPU
      clean: true

  - task: BatchScript@1
    displayName: Set Agent Drive and Clean Test Folder
    inputs:
      filename: _build/SetAgentDriveAndCleanTestFolder.bat
      modifyEnvironment: true

  - task: UseDotNet@2
    displayName: 'Use .NET Core 5.x'
    inputs:
      version: '5.x'

  - task: PowerShell@1
    displayName: Test
    inputs:
      scriptName: _build/ParallelTestExecution.ps1
      arguments: -testRunner $(UserProfile)/.nuget/packages/xunit.runner.console/2.4.1/tools/net47/xunit.console.exe -testLibrary $(Build.SourcesDirectory)/code/test/TemplateStudioForWinUICs.Tests/bin/Debug/code/test/TemplateStudioForWinUICs.Tests/bin/Debug/TemplateStudioForWinUICs.Tests.dll -traits 'ExecutionSet=MinimumWinUICs' -outputDir $(Build.SourcesDirectory)

  - task: PublishTestResults@2
    displayName: Publish Test Results
    condition: succeededOrFailed()
    inputs:
      testRunner: XUnit
      testResultsFiles: '**/TEST-*.xml'

- job:
  displayName: Test - Template Studio for WinUI (C++)
  timeoutInMinutes: 240
  dependsOn: Build

  pool:
    vmImage: windows-2022

  steps:
  - checkout: self
    clean: true
    submodules: recursive

  - task: NuGetToolInstaller@1
    displayName: 'Use NuGet'
    inputs:
      checkLatest: true

  - task: NuGetCommand@2
    displayName: NuGet restore
    inputs:
      solution: code/TemplateStudio.WinUICpp.slnf

  - task: VSBuild@1
    displayName: Build
    inputs:
      solution: code/TemplateStudio.WinUICpp.slnf
      vsVersion: 17.0
      configuration: DebugWinUICpp
      platform: Any CPU
      clean: true

  - task: BatchScript@1
    displayName: Set Agent Drive and Clean Test Folder
    inputs:
      filename: _build/SetAgentDriveAndCleanTestFolder.bat
      modifyEnvironment: true

  - task: UseDotNet@2
    displayName: 'Use .NET Core 5.x'
    inputs:
      version: '5.x'

  - task: PowerShell@1
    displayName: Test
    inputs:
      scriptName: _build/ParallelTestExecution.ps1
      arguments: -testRunner $(UserProfile)/.nuget/packages/xunit.runner.console/2.4.1/tools/net47/xunit.console.exe -testLibrary $(Build.SourcesDirectory)/code/test/TemplateStudioForWinUICpp.Tests/bin/Debug/code/test/TemplateStudioForWinUICpp.Tests/bin/Debug/TemplateStudioForWinUICpp.Tests.dll -traits 'ExecutionSet=MinimumWinUICpp' -outputDir $(Build.SourcesDirectory)

  - task: PublishTestResults@2
    displayName: Publish Test Results
    condition: succeededOrFailed()
    inputs:
      testRunner: XUnit
      testResultsFiles: '**/TEST-*.xml'

- job:
  displayName: Test - Template Studio for WPF
  timeoutInMinutes: 240
  dependsOn: Build

  pool:
    vmImage: windows-2022

  steps:
  - checkout: self
    clean: true
    submodules: recursive

  - task: NuGetToolInstaller@1
    displayName: 'Use NuGet'
    inputs:
      checkLatest: true

  - task: NuGetCommand@2
    displayName: NuGet restore
    inputs:
      solution: code/TemplateStudio.WPF.slnf

  - task: VSBuild@1
    displayName: Build
    inputs:
      solution: code/TemplateStudio.WPF.slnf
      vsVersion: 17.0
      configuration: DebugWPF
      platform: Any CPU
      clean: true

  - task: BatchScript@1
    displayName: Set Agent Drive and Clean Test Folder
    inputs:
      filename: _build/SetAgentDriveAndCleanTestFolder.bat
      modifyEnvironment: true

  - task: UseDotNet@2
    displayName: 'Use .NET Core 5.x'
    inputs:
      version: '5.x'

  - task: PowerShell@1
    displayName: Test
    inputs:
      scriptName: _build/ParallelTestExecution.ps1
      arguments: -testRunner $(UserProfile)/.nuget/packages/xunit.runner.console/2.4.1/tools/net47/xunit.console.exe -testLibrary $(Build.SourcesDirectory)/code/test/TemplateStudioForWPF.Tests/bin/Debug/code/test/TemplateStudioForWPF.Tests/bin/Debug/TemplateStudioForWPF.Tests.dll -traits 'ExecutionSet=MinimumWPF' -outputDir $(Build.SourcesDirectory)

  - task: PublishTestResults@2
    displayName: Publish Test Results
    condition: succeededOrFailed()
    inputs:
      testRunner: XUnit
      testResultsFiles: '**/TEST-*.xml'

- job:
  displayName: Test - Template Studio for UWP
  timeoutInMinutes: 240
  dependsOn: Build

  pool:
    vmImage: windows-2022

  steps:
  - checkout: self
    clean: true
    submodules: recursive

  - task: NuGetToolInstaller@1
    displayName: 'Use NuGet'
    inputs:
      checkLatest: true

  - task: NuGetCommand@2
    displayName: NuGet restore
    inputs:
      solution: code/TemplateStudio.UWP.slnf

  - task: VSBuild@1
    displayName: Build
    inputs:
      solution: code/TemplateStudio.UWP.slnf
      vsVersion: 17.0
      configuration: DebugUWP
      platform: Any CPU
      clean: true

  - task: BatchScript@1
    displayName: Set Agent Drive and Clean Test Folder
    inputs:
      filename: _build/SetAgentDriveAndCleanTestFolder.bat
      modifyEnvironment: true

  - task: UseDotNet@2
    displayName: 'Use .NET Core 5.x'
    inputs:
      version: '5.x'

  - task: PowerShell@1
    displayName: Test
    inputs:
      scriptName: _build/ParallelTestExecution.ps1
      arguments: -testRunner $(UserProfile)/.nuget/packages/xunit.runner.console/2.4.1/tools/net47/xunit.console.exe -testLibrary $(Build.SourcesDirectory)/code/test/TemplateStudioForUWP.Tests/bin/Debug/code/test/TemplateStudioForUWP.Tests/bin/Debug/TemplateStudioForUWP.Tests.dll -traits 'ExecutionSet=MinimumUWP' -outputDir $(Build.SourcesDirectory)

  - task: PublishTestResults@2
    displayName: Publish Test Results
    condition: succeededOrFailed()
    inputs:
      testRunner: XUnit
      testResultsFiles: '**/TEST-*.xml'
